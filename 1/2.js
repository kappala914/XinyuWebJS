/* 
	JS可以执行的环境
		+ 浏览器 【浏览器的内核：JS渲染引擎】
		+ Hybrid混合APP 【webview 基于 webkit内核】
		+ Node
		+ ...
*/

/* 
	浏览器会在计算机内存中（内存条）开辟一块内存，专门用来执行JS代码
		=>栈内存：执行环境栈 ECStack => Execution Context Stack
*/

/* 
	EC(G) -> Execution Context(Global)
	全局执行上下文，用来供全局代码执行
	形成上下文目的： 区分不同区域的代码执行
*/

/* 
	VO(G) -> Varible Object(Global)
	全局变量对象：存储全局上下文中声明的变量==
*/

/* 
	当前区域的执行上下文形成后会进栈执行
	有的执行上下文在代码执行完成后，会出栈
*/

/* 
	var a = 12的过程
		第一步：创建值
			+ 基本类型值直接存储到栈内存中
			+ 引用类型值是单独开辟一块新的内存来存储
		第二步：声明变量declare
		第三步：变量和值关联到一起
*/

/* 
	创建值
		+ 基本数据类型直接存储到栈
		+ 引用数据类型
			+ 单独开辟一个块内存 Heap堆内存
			+ 每一个堆内存都有一个16进制地址
			+ 把键值对分别存储到堆中
			+ 把16进制地址放到栈中存储，方便后期变量的关联
*/
